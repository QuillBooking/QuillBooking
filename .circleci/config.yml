version: 2.1

orbs:
  node: circleci/node@5.1.0

commands:
  install-php-extensions:
    steps:
      - run:
          name: Install PHP extensions
          command: |
            sudo apt-get update
            sudo apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev
            
            # Check which extensions are already installed
            INSTALLED_EXTENSIONS=$(php -m | tr '[:upper:]' '[:lower:]')
            
            # Configure GD if not already installed
            if ! echo "$INSTALLED_EXTENSIONS" | grep -q "^gd$"; then
              sudo docker-php-ext-configure gd --with-freetype --with-jpeg
            fi
            
            # Install extensions only if they're not already installed
            EXTENSIONS_TO_INSTALL=""
            for ext in gd exif mysqli pdo_mysql zip bcmath soap intl; do
              if ! echo "$INSTALLED_EXTENSIONS" | grep -q "^$ext$"; then
                EXTENSIONS_TO_INSTALL="$EXTENSIONS_TO_INSTALL $ext"
              fi
            done
            
            # Only run the install command if there are extensions to install
            if [ ! -z "$EXTENSIONS_TO_INSTALL" ]; then
              sudo docker-php-ext-install -j$(nproc) $EXTENSIONS_TO_INSTALL
            else
              echo "All required PHP extensions are already installed."
            fi

jobs:
  php-test:
    parameters:
      php-version:
        type: string
      wordpress-version:
        type: string
    docker:
      - image: cimg/php:<< parameters.php-version >>
        environment:
          WP_TESTS_DB_NAME: wordpress_test
          WP_TESTS_DB_USER: root
          WP_TESTS_DB_PASSWORD: password
          WP_TESTS_DB_HOST: 127.0.0.1
      - image: cimg/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wordpress_test
    steps:
      - checkout
      - run:
          name: Install SVN and MySQL client
          command: sudo apt-get update && sudo apt-get install -y subversion mysql-client
      - install-php-extensions
      - run:
          name: Remove incompatible dependencies for PHP < 8.1
          command: |
            if [[ "<< parameters.php-version >>" == "7.4" || "<< parameters.php-version >>" == "8.0" ]]; then
              composer remove --dev spatie/phpunit-watcher --no-update --no-interaction
            fi
      - run:
          name: Update Composer dependencies
          command: composer update --no-progress --no-ansi --no-interaction
      - run:
          name: Set up WordPress test environment
          command: bash bin/install-wp-tests.sh wordpress_test root password 127.0.0.1 << parameters.wordpress-version >>
      - run:
          name: Run PHPUnit tests
          command: composer test

  react-test:
    docker:
      - image: cimg/node:18.0
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run React tests
          command: npm test
          
  integration-test:
    machine:
      image: ubuntu-2204:current
    steps:
      - checkout
      - run:
          name: Set up MySQL
          command: |
            sudo apt-get update
            sudo apt-get install -y mysql-server
            sudo systemctl start mysql
            sudo mysql -e "CREATE DATABASE wordpress;"
            sudo mysql -e "CREATE USER 'wordpress'@'localhost' IDENTIFIED BY 'password';"
            sudo mysql -e "GRANT ALL PRIVILEGES ON wordpress.* TO 'wordpress'@'localhost';"
            sudo mysql -e "FLUSH PRIVILEGES;"
      - run:
          name: Install PHP and extensions
          command: |
            sudo add-apt-repository ppa:ondrej/php -y
            sudo apt-get update
            sudo apt-get install -y php7.4 php7.4-mysql php7.4-gd php7.4-xml php7.4-mbstring php7.4-zip php7.4-curl php7.4-intl
      - run:
          name: Install WordPress CLI
          command: |
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            sudo mv wp-cli.phar /usr/local/bin/wp
      - run:
          name: Install and configure WordPress
          command: |
            # Create WordPress directory
            sudo mkdir -p /var/www/html
            sudo chown -R $USER:$USER /var/www/html
            
            # Download and configure WordPress
            cd /var/www/html
            wp core download
            wp config create --dbname=wordpress --dbuser=wordpress --dbpass=password --dbhost=localhost
            wp core install --url=localhost --title="Test Site" --admin_user=admin --admin_password=password --admin_email=test@example.com --skip-email
            
            # Make sure wp-content is writable
            sudo chmod -R 755 wp-content
      - run:
          name: Install Composer dependencies
          command: |
            # Install Composer 2.2 (last version with PHP 7.4 compatibility)
            cd $CIRCLE_WORKING_DIRECTORY
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            php composer-setup.php --version=2.2.18
            php -r "unlink('composer-setup.php');"
            sudo mv composer.phar /usr/local/bin/composer
            
            # Install dependencies
            composer update --no-progress --no-ansi --no-interaction
      - run:
          name: Install and activate plugin
          command: |
            # Create plugin directory
            mkdir -p /var/www/html/wp-content/plugins/quill-booking
            
            # Copy plugin files
            cp -r ./* /var/www/html/wp-content/plugins/quill-booking/
            
            # Activate the plugin
            cd /var/www/html
            wp plugin activate quill-booking
      - run:
          name: Run integration tests
          command: cd $CIRCLE_WORKING_DIRECTORY && composer run integration-test

workflows:
  wordpress-react-tests:
    jobs:
      - php-test:
          matrix:
            parameters:
              php-version: ["7.4", "8.0", "8.1", "8.2"]
              wordpress-version: ["latest", "6.4", "6.3", "6.2", "6.1", "6.0", "5.9"]
            exclude:
              # WordPress 5.9 doesn't fully support PHP 8.1 and 8.2
              - php-version: "8.1"
                wordpress-version: "5.9"
              - php-version: "8.2"
                wordpress-version: "5.9"
              # PHP 8.2 compatibility is only fully supported in WP 6.2+
              - php-version: "8.2"
                wordpress-version: "6.0"
              - php-version: "8.2"
                wordpress-version: "6.1"
          filters:
            branches:
              only: manual-trigger
      - react-test:
          filters:
            branches:
              only: manual-trigger
      - integration-test:
          requires:
            - php-test
            - react-test
          filters:
            branches:
              only: manual-trigger

  # Manual workflow that can be triggered via the CircleCI UI
  manual-workflow:
    jobs:
      - hold:
          type: approval
          filters:
            branches:
              only: main
      - php-test:
          requires:
            - hold
          matrix:
            parameters:
              php-version: ["7.4", "8.0", "8.1", "8.2"]
              wordpress-version: ["latest", "6.4", "6.3", "6.2", "6.1", "6.0", "5.9"]
            exclude:
              # WordPress 5.9 doesn't fully support PHP 8.1 and 8.2
              - php-version: "8.1"
                wordpress-version: "5.9"
              - php-version: "8.2"
                wordpress-version: "5.9"
              # PHP 8.2 compatibility is only fully supported in WP 6.2+
              - php-version: "8.2"
                wordpress-version: "6.0"
              - php-version: "8.2"
                wordpress-version: "6.1"
      - react-test:
          requires:
            - hold
      - integration-test:
          requires:
            - php-test
            - react-test

  # Pull request workflow with approval
  pull-request-workflow:
    jobs:
      - hold:
          type: approval
          filters:
            branches:
              ignore: main
      - php-test:
          requires:
            - hold
          matrix:
            parameters:
              php-version: ["7.4", "8.0", "8.1", "8.2"]
              wordpress-version: ["latest", "6.4", "6.3"]
            exclude:
              # PHP 8.2 compatibility exclusions
              - php-version: "8.2"
                wordpress-version: "6.0"
              - php-version: "8.2"
                wordpress-version: "6.1"
          filters:
            branches:
              ignore: main
      - react-test:
          requires:
            - hold
          filters:
            branches:
              ignore: main
      - integration-test:
          requires:
            - php-test
            - react-test
          filters:
            branches:
              ignore: main 