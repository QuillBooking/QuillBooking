version: 2.1

orbs:
  node: circleci/node@5.1.0

commands:
  install-php-extensions:
    steps:
      - run:
          name: Install PHP extensions
          command: |
            sudo apt-get update
            sudo apt-get install -y libpng-dev libjpeg-dev libfreetype6-dev
            sudo docker-php-ext-configure gd --with-freetype --with-jpeg
            sudo docker-php-ext-install -j$(nproc) gd exif mysqli pdo_mysql zip bcmath soap intl
            sudo pecl install imagick
            sudo docker-php-ext-enable imagick

jobs:
  php-test:
    parameters:
      php-version:
        type: string
      wordpress-version:
        type: string
    docker:
      - image: cimg/php:<< parameters.php-version >>
        environment:
          WP_TESTS_DB_NAME: wordpress_test
          WP_TESTS_DB_USER: root
          WP_TESTS_DB_PASSWORD: password
          WP_TESTS_DB_HOST: 127.0.0.1
      - image: cimg/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wordpress_test
    steps:
      - checkout
      - run:
          name: Install SVN
          command: sudo apt-get update && sudo apt-get install -y subversion
      - install-php-extensions
      - run:
          name: Remove incompatible dependencies for PHP < 8.1
          command: |
            if [[ "<< parameters.php-version >>" == "7.4" || "<< parameters.php-version >>" == "8.0" ]]; then
              composer remove --dev spatie/phpunit-watcher --no-update --no-interaction
            fi
      - run:
          name: Update Composer dependencies
          command: composer update --no-progress --no-ansi --no-interaction
      - run:
          name: Set up WordPress test environment
          command: bash bin/install-wp-tests.sh wordpress_test root password 127.0.0.1 << parameters.wordpress-version >>
      - run:
          name: Run PHPUnit tests
          command: composer test

  react-test:
    docker:
      - image: cimg/node:18.0
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run React tests
          command: npm test
          
  integration-test:
    docker:
      - image: cimg/php:8.1
        environment:
          WP_CLI_ALLOW_ROOT: 1
      - image: cimg/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: wordpress
      - image: wordpress:latest
        environment:
          WORDPRESS_DB_HOST: 127.0.0.1
          WORDPRESS_DB_USER: root
          WORDPRESS_DB_PASSWORD: password
          WORDPRESS_DB_NAME: wordpress
          WORDPRESS_DEBUG: 1
    steps:
      - checkout
      - install-php-extensions
      - run:
          name: Install WordPress CLI
          command: |
            curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
            chmod +x wp-cli.phar
            sudo mv wp-cli.phar /usr/local/bin/wp
      - run:
          name: Install dependencies
          command: composer install --no-ansi --no-interaction
      - run:
          name: Wait for WordPress to be ready
          command: |
            # Simple healthcheck to wait for WordPress
            for i in $(seq 1 30); do
              if curl -s http://localhost:80 > /dev/null; then
                echo "WordPress is up and running"
                break
              fi
              echo "Waiting for WordPress..."
              sleep 2
            done
      - run:
          name: Install plugin into WordPress
          command: |
            # Create plugin directory
            mkdir -p /tmp/wordpress/wp-content/plugins/quill-booking
            
            # Copy plugin files
            cp -r ./* /tmp/wordpress/wp-content/plugins/quill-booking/
            
            # Install and activate plugin using WP-CLI
            wp plugin activate quill-booking --path=/var/www/html
      - run:
          name: Run integration tests
          command: composer run integration-test

workflows:
  wordpress-react-tests:
    jobs:
      - php-test:
          matrix:
            parameters:
              php-version: ["7.4", "8.0", "8.1", "8.2"]
              wordpress-version: ["latest", "6.4", "6.3", "6.2", "6.1", "6.0", "5.9"]
            exclude:
              # WordPress 5.9 doesn't fully support PHP 8.1 and 8.2
              - php-version: "8.1"
                wordpress-version: "5.9"
              - php-version: "8.2"
                wordpress-version: "5.9"
              # PHP 8.2 compatibility is only fully supported in WP 6.2+
              - php-version: "8.2"
                wordpress-version: "6.0"
              - php-version: "8.2"
                wordpress-version: "6.1"
      - react-test
      - integration-test:
          requires:
            - php-test
            - react-test 